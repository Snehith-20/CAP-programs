/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    ArrayList<Integer>arr=new ArrayList<>();
    public List<Integer> getAllElements(TreeNode root1, TreeNode root2) {
        Traverse(root1);
        Traverse1(root2);
        Collections.sort(arr);   

        return arr;
    }
    void Traverse(TreeNode root1){
        if(root1==null){
            return ;
        }
        Traverse(root1.left);
        arr.add(root1.val);
        Traverse(root1.right);
    } 
    void Traverse1(TreeNode root2){
        if(root2==null){
            return ;
        }
        Traverse1(root2.left);
        arr.add(root2.val);
        Traverse1(root2.right);
    } 
}
