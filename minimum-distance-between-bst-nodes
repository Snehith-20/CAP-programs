/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    ArrayList<Integer> arr = new ArrayList<Integer>();
    public int minDiffInBST(TreeNode root) {
        int min=Integer.MAX_VALUE;
        traverse(root);
        for(int i=0;i<arr.size()-1;i++){
            if ((arr.get(i+1)-arr.get(i))<min){
                min=arr.get(i+1)-arr.get(i);
            }
        }
    return min;
    }
    void traverse(TreeNode root){
        if(root == null){
            return ;
        }
        traverse(root.left);
        arr.add(root.val);
        traverse(root.right);
        return ;
    }
}
